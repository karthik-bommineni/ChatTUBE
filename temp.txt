building coding projects is hard not only because it demands you to put in so much time and effort apart from your classes or apart from your day jobs but also because coming up with the ideas for the project itself is very hard if you're a beginner who's always questioning what sort of project should I build then today I want to share with you how I personally come up with ideas for my own coding projects and how I find inspiration to build new ones I personally am very interested in the front end part I love designing things but for those of you who are not that strong with design or uiux I also want to share one tip so that you don't have to worry about coming up with a professional looking uiux for your personal projects this is not going to be one of those videos where I am going to be talking about like top five projects to build to get a high pay job mainly because I think those are not really as helpful because if everyone is making the same project then it's not that impressive anymore and also very bold claim to say that a project is going to get you a job or whatever so that's why instead of making a video about a list of projects that you could create I just wanted to share with you a framework to come up with project ideas and how do you build those projects yourself from scratch before I share with you what to do let's talk a little bit about what you might be doing already so let's say you're learning the Jango framework and someone told you to build projects so the easiest thing that you see that you could do to build a project is go to YouTube search for a project tutorial look for the one that is the shortest and then create that project along with that tutorial and then add it to your portfolios or your resumes let's talk about what a project really is after talking with a lot of beginners I assume that a lot of you have gotten the idea of building coding projects completely wrong let's say you were learning to go you watched a tutorial to learn how to make pasta and let's say you were successful on your first triy that doesn't make you a chef right similarly if you were learning to drive and you had some instructor next to you telling you what to do and how to do something and you were able to drive let's say from your home to the supermarket under the guidance of someone fairly easily that doesn't mean that you should get a driving license the next day in both of these situations let's say for a chef you have to try out multiple different recipes you have to keep doing the same thing again and again and over time you come up with your own style or your own recipes or your own way of cooking things and only when you have this large portfolio I I don't know how the chef profession works like but this is just an example but only after you've done something multiple times and perfected it over time only then you begin to feel like a chef right similarly for driving you have to practice the same thing over and over again just to get a good hang at it that's the same with projects I think most people when they start building a project they are doing that with the intention of adding it to their resumes so they go and find the most impressive project let's say building Netflix clone they build it and then they add to their resum√©s but what if we took away the pressure of every project being a portfolio project what if you just built a project for the sake of practice why are we not creating more practice projects not all projects have to be a part of your portfolio give yourself the permission and the freedom to make mistakes to build practice projects to learn things not every project has to be a super polished or a super complicated or a super impressive one you could just create practice projects and after you feel a bit confident you could polish your practice project add a few more features and then add it to your portfolios I know that going to a tutorial and just copying that tutorial is the path to least resistance that is a quick shortcut of basically adding a personal project to your resume to impress your recruiters but I think that is one of the reasons why you end up with an imposter syndrome where you end up feeling like you don't know anything even after you've created a project now for those of you who are just looking for a shortcut just keep doing whatever you're doing right now but for those of you who are actually curious about learning something and actually want to play around but don't know what to create don't know how to come up with ideas then here are some tips for you the first thing that you could do is always be aware of an opportunity to build a project here's how you could think of those ideas let's say you go to the gym you have this workout planning app but you don't use all of the featur that app provides you with you only need one or two features and you don't want to pay a monthly subscription fee for the app now the good thing for you is that you know how to code so you could figure out how to create your own app that serves you well and also you could customize the UI to be exactly how you want it to be so these ideas could serve as solutions to your real life problems and those problems don't even have to be new problems or new way of solving things it could be something that already exist exist and you just are creating a version of it for yourself some more things that you could create could be simple scripts that improve your productivity an example of a productivity script or a simple app for me could look something like this for example I have a video and I want to post it on all three of my social media platforms so I want to build an app so that I just have to upload the video once with the caption and the hashtags or whatever and that video should be posted to Instagram YouTube shorts and Tik Tok or Twitter or wherever you want to post it similarly there could be use cases in your life you could pick the simplest ofu idea and make it your own now let's talk about those of you who are not that strong with design building a coding project is not just an engineering or not just a development task it also involves some uiux designing work and it also involves you to be the product manager of that project as well if you find it hard to build designs or to build uis and to come up with features in your app so let's say you're building an expense tracker dashboard sort of thing for yourself what you could do is go to behance.com and search for expense tracker dashboard there you'll find so many different designs to get you inspired now I'm not telling you to copy these designs and pass them off as your to use them commercially for your business or whatever because that is someone else's work but as I said if you are building something for practice you could just use that design as inspiration or if it'sit purely for just practice you could also copy that design and try to replicate that design by yourself that design already has some features implemented inside of it not the engineering part but how the design of that feature will look like and you could make it your own you could implement it yourself instead of just following a project tutorial that tells you how to do everything now when you're using a design as an inspiration now you're thinking for yourself you're thinking how to implement this design you are building your problem solving skills in this case what makes a personal project personal is you're building something that you are genuinely interested in instead of following or doing something that someone else told you to do one more thing that you could do is go to chat GPD tell it that these are your interests and ask it to suggest you some project ideas based on it then you could brainstorm on that project idea to give you a list of features that you could Implement now that you have a project idea now you have a list of features to build in it now you could go to behance to search for some uiux inspiration and then all there left is to actually develop it or to build it now here's where you could throw in your tutorials not for building the entire thing but for building these specific features in case you're stuck remember that a project that you build by yourself with your own blood and sweat is so much better than any project that you have stolen from the internet I hope this video helped you out in at least some way I know that I did not directly answer your question what to build not that watching tutorials is bad that could Ser as a really good starting point for you it's going to take time and patience just look at projects at one building block at a time you solve one problem then you solve different problems and eventually at the end when you stack those Solutions on top of each other you're going to end up with a final result that is going to be so much more satisfactory than any other tutorial project that's all for today's video I'll see you in the next one